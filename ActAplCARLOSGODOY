#include <iostream>
using namespace std;


struct Node {
    float dato;
    Node *anterior;
    Node *siguiente;
};
Node *Inicio = new Node();
Node *Final = new Node();

void imprimirLista();
void ingresarPpo();
void ingresarFinal();
void PosicionElegida();
void sumaTotalDatos();
void invertirLista();
void intercambiar2Nodos();
void listaOrdenada();
void mayorYrepetidos();



int main() {
    int panelControl;

    Inicio = NULL;
    Final = NULL;

    do {
        cout << "\n";
        cout << "BIENVENIDO AL PANEL DE CONTROL, INTRODUZCA OPCION. " << endl;
        cout << "--[1]-- Mostrar lista" <<endl;
        cout << "--[2]-- Insertar valor al inicio de la lista" <<endl;
        cout << "--[3]-- Insertar valor al final de la lista" <<endl;
        cout << "--[4]-- Insertar valor en la posici칩n deseada" <<endl;
        cout << "--[5]-- Calcular mayor de los elementos y las veces que se repite." <<endl;
        cout << "--[6]-- Suma de todos los valores de la lista" <<endl;
        cout << "--[7]-- Comprobar si la lista est치 ordenada" << endl;
        cout << "--[8]-- Eliminar valor dado en la lista" <<endl;
        cout << "--[9]-- Invertir la lista" <<endl;
        cout << "--[10]-- Intercambiar 2 nodos dados en la lista" <<endl;
        cout << "--[11]-- SALIR" <<endl;
        cout << "-->Ingrese opci칩n: " <<endl, cin>>panelControl;

        switch (panelControl) {
            case 1:{

                imprimirLista();
                break;
            }
            case 2: {

                ingresarPpo();
                break;
            }
            case 3:{
                ingresarFinal();
                break;
            }
            case 4:{

                PosicionElegida();
                break;
            }
            case 5:{

                mayorYrepetidos();
                break;
            }

            case 6:{

                sumaTotalDatos();
                break;
            }

            case 7:{

                listaOrdenada();
                break;
            }

            case 8:{

                intercambiar2Nodos();
                break;
            }

            case 9:{

                invertirLista();
                break;
            }

            case 10:{


                break;
            }
            case 11:{

                cout<<"El programa se ha cerrado muchas gracias, hasta la proxima."<<endl;
                break;

            }
        }
    }while (panelControl != 11);

        return 0;
}


void imprimirLista() {
    Node *box0 = new Node;
    box0 = Inicio;

    if (Inicio != NULL) {

        do {
            cout << box0->dato << endl;
            box0 = box0->siguiente;

        } while (box0 != Inicio);
    } else {
        cout << "La lista esta vacia" << endl;
    }
}

    void ingresarPpo() {

  Node *Aux1 = new Node;
  Node *n = new Node;
  cout<<"Ingresar valor"<<endl;
  cin >> n->dato;
  if(Inicio==NULL) {

      Inicio = n;    //Introduzco el nuevo nodo
      Final = n;
// Ya que es una lista doble enlazada solo existe un nodo que es el incio y el final y al moverse al sig o anterior aparece ene le msimo nodo.
      Inicio->siguiente = Final;
      Inicio->anterior = Final;
      Final->siguiente = Inicio;
      Final->anterior = Inicio;
  }

  else {
//guardamos incio en aux1, el siguiente del final sea n, Inicio=n hcae que n sea el primer nodo Aux1.anterior
      Aux1=Inicio;
      Final->siguiente=n;
      Inicio=n;
      Aux1->anterior=Inicio;
      n->siguiente=Aux1;
      n->anterior=Final;
  }
    }
    void ingresarFinal() {
    Node *box2 = new Node;
    cout<<"Introduzca el valor"<<endl;
    cin>>box2->dato;
        Inicio->anterior = box2;
        Final->siguiente = box2;
        box2->siguiente = Inicio;
        box2->siguiente = Final;

        Final=box2;
        Final->siguiente=Inicio;
        Inicio->anterior=Final;
    }

    void PosicionElegida() {
    int pos;
        Node *aux1 = new Node;
        Node *aux2 = new Node;
        Node *actual = new Node;
        Node *neew = new Node;
        cout<<"Inserte Posici칩n deseada"<<endl;
        cin>>pos;
        pos=pos-1;
        actual=Inicio;
        aux1=Inicio;
        Node *Long = new Node;
        int Longitud = 0;
        Long=Inicio;
        do {
       Long=Long->siguiente;
       Longitud++;

        } while (Long != Inicio);
        if (pos==0){

            ingresarPpo();

        }else if (pos==Longitud+1){
            ingresarFinal();
        }else {
            cout<<"Introduzca el Valor deseado"<<endl;
            cin>>neew->dato;


            for (int i = 0; i < pos ; ++i) {
                actual=actual->siguiente;
            }

            aux1=actual;
            aux2=actual->anterior;
            aux2->siguiente=neew;
            actual=neew;
            aux1->anterior=actual;
            neew->siguiente=aux1;
            neew->anterior=aux2;


        }

    }

    void listaOrdenada(){


        Node *actual=new Node();
        float mayor;
        actual=Inicio;
        int orden=0;

        do{
            if(actual==Inicio){

                mayor=actual->dato;


            } else if (mayor<actual->dato){

                mayor=actual->dato;

            } else if (mayor>actual->dato){

                orden=1;
            }
            actual=actual->siguiente;

        }while (actual!=Inicio);


        if (orden==0) {

            cout << "La lista esta ordenada";
        } else{

            cout<<"La lista no esta ordenada";
        }
}

    void sumaTotalDatos() {

    //igual que imprimir pero con una variable que vaya sumando los datos
    //la incia a 0 y se va sumando el daot acutal;
        Node *actual = new Node;
        actual=Inicio;
        int suma = 0;

        if (Inicio != NULL) {

            do {

                suma=suma+actual->dato;
                actual=actual->siguiente;

            } while (actual != Inicio);
            cout<<"La suma de los valores de la lista es:"<<suma;
        } else {
            cout<< "La lista esta vacia" << endl;
        }
    }
    void mayorYrepetidos() {

        Node *actual=new Node();
        float mayor;
        int repeticiones;
        actual=Inicio;

        do{
            if(actual==Inicio){

                mayor=actual->dato;


            }else if (actual->dato>mayor){

                mayor=actual->dato;
                repeticiones=1;

            }else if (actual->dato==mayor){

                repeticiones++;
            }

            actual=actual->siguiente;

        }while (actual!=Inicio);

        cout<<"\nEl Numero Mayor: "<<mayor<<" numero de repeticiones: "<<repeticiones;

    }




    void invertirLista() {
        Node *Long = new Node;
        //creacion de nodos
        Node *mitad = new Node;
        Node *delante = new Node;
        Node *atras = new Node;
        //contar longitud de la lista
        int Longitud = 0;
        delante = Inicio;
        atras = Final;
        Long = Inicio;
        do {//nodo hacia mitad delante
            Long = Long->siguiente;
            Longitud++;

        } while (Longitud != 0);
        Longitud = Longitud/2;
        for (int i = 0; i < Longitud; ++i) {

            mitad->dato=delante->dato;
            delante->dato=atras->dato;
            atras->dato=mitad->dato;

            delante=delante->siguiente;
            atras=atras->anterior;
        }

    }



    //nodo hacia mitad atras
    //conforme lo recorre se intercambian los valores

        void intercambiar2Nodos() {


        int pos1;
        int pos2;
        int pos3;
        Node *act1=new Node();
        Node *act2=new Node();
        Node *aux1=new Node();

        cout<<"Posicion A";
        cin>>pos1;
        cout<<"Posicion B";
        cin>>pos2;
        pos1=pos1-1;
        pos2=pos2-1;

        act1=Inicio;
        act2=Inicio;

        for(int i=0;i<pos1;i++){
            act1=act1->siguiente;
        }
        for(int i=0;i<pos2;i++){
            act2=act2->siguiente;
        }

        aux1->dato=act1->dato;
        act1->dato=act2->dato;
        act2->dato=aux1->dato;

    }
